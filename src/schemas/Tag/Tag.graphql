type Tag {
          id: String!
          name: String!
          description: String
          image: Attachment
          state: State!
          createdAt: DateTime!
          updatedAt: DateTime!
          attachmentId: String
          forms(where: FormWhereInput
              orderBy: [FormOrderByInput!]
              cursor: FormWhereUniqueInput
              take: Int
              skip: Int
              distinct: [FormScalarFieldEnum!]
              ): [Form!]!
          forums(where: ForumWhereInput
              orderBy: [ForumOrderByInput!]
              cursor: ForumWhereUniqueInput
              take: Int
              skip: Int
              distinct: [ForumScalarFieldEnum!]
              ): [Forum!]!
    }

      type TagListResponse {
        status: Boolean!
        data: [Tag!]
        message: String!
      }
     

      type TagResponse {
        status: Boolean!
        data: Tag
        message: String!
      }
      
      type TagBatchResponse {
        status: Boolean!
        data: BatchPayload
        message: String!
      }
      type AggregateTagResponse {
        status: Boolean!
        data: AggregateTag
        message: String!
      }
      type TagCountResponse {
        status: Boolean!
        data: Int
        message: String!
      }
      extend type Query {
    findUniqueTag(where: TagWhereUniqueInput!): TagResponse!
    findManyTag(
      where: TagWhereInput
      orderBy: [TagOrderByInput!]
      cursor: TagWhereUniqueInput
      distinct: [TagScalarFieldEnum!]
      skip: Int
      take: Int
    ): TagListResponse!
  }
extend type Mutation {
    createOneTag(data: TagCreateInput!): TagResponse!
    updateOneTag(
      where: TagWhereUniqueInput!
      data: TagUpdateInput!
    ): TagResponse!
  }