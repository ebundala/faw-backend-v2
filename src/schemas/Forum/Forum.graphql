type Forum {
          id: String!
          question: String!
          description: String!
          author: User!
          authorId: String!
          state: State!
          type: ForumType!
          tags(where: TagWhereInput
              orderBy: [TagOrderByInput!]
              cursor: TagWhereUniqueInput
              take: Int
              skip: Int
              distinct: [TagScalarFieldEnum!]
              ): [Tag!]!
          forumAnswers(where: ForumAnswerWhereInput
              orderBy: [ForumAnswerOrderByInput!]
              cursor: ForumAnswerWhereUniqueInput
              take: Int
              skip: Int
              distinct: [ForumAnswerScalarFieldEnum!]
              ): [ForumAnswer!]!
          comments(where: CommentWhereInput
              orderBy: [CommentOrderByInput!]
              cursor: CommentWhereUniqueInput
              take: Int
              skip: Int
              distinct: [CommentScalarFieldEnum!]
              ): [Comment!]!
          commentsEnabled: Boolean!
          attachments(where: AttachmentWhereInput
              orderBy: [AttachmentOrderByInput!]
              cursor: AttachmentWhereUniqueInput
              take: Int
              skip: Int
              distinct: [AttachmentScalarFieldEnum!]
              ): [Attachment!]!
          createdAt: DateTime!
          updatedAt: DateTime!
    }

      type ForumListResponse {
        status: Boolean!
        data: [Forum!]
        message: String!
      }
     

      type ForumResponse {
        status: Boolean!
        data: Forum
        message: String!
      }
      
      type ForumBatchResponse {
        status: Boolean!
        data: BatchPayload
        message: String!
      }
      type AggregateForumResponse {
        status: Boolean!
        data: AggregateForum
        message: String!
      }
      type ForumCountResponse {
        status: Boolean!
        data: Int
        message: String!
      }
      extend type Query {
    findUniqueForum(where: ForumWhereUniqueInput!): ForumResponse!
    findManyForum(
      where: ForumWhereInput
      orderBy: [ForumOrderByInput!]
      cursor: ForumWhereUniqueInput
      distinct: [ForumScalarFieldEnum!]
      skip: Int
      take: Int
    ): ForumListResponse!
  }
extend type Mutation {
    createOneForum(data: ForumCreateInput!): ForumResponse!
    updateOneForum(
      where: ForumWhereUniqueInput!
      data: ForumUpdateInput!
    ): ForumResponse!
  }